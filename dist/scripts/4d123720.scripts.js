"use strict";angular.module("LocalStorageModule").value("prefix","gaWdiDatabase"),angular.module("ticketyApp",["LocalStorageModule","firebase"]).config(["$routeProvider",function(a){a.when("/game_board",{templateUrl:"views/game_board.html",controller:"GameBoardCtrl"}).when("/game_board/:id/:mySymbol",{templateUrl:"views/game_board.html",controller:"GameBoardCtrl"}).when("/how_to",{templateUrl:"views/how_to.html",controller:"HowToCtrl"}).when("/",{templateUrl:"views/main.html",controller:"MainCtrl"}).when("/match_player",{templateUrl:"views/match_player.html",controller:"MatchPlayerCtrl"}).otherwise({redirecTo:"/"})}]),angular.module("ticketyApp").controller("MainCtrl",["$scope","$rootScope","localStorageService",function(a,b,c){console.log("localStorageService"),c.add("names",["Matt","peter","Someone Else"]),a.awesomeThings=["HTML5 Boilerplate","AngularJS","Karma"],a.name="Tickety",b.is_how_to_page=!1,b.is_play_now_page=!1,a.click=function(){alert("I've been clicked!")}}]),angular.module("ticketyApp").controller("GameBoardCtrl",["$scope","$rootScope","$timeout","localStorageService","angularFire","$routeParams",function(a,b,c,d,e,f){function g(a,b){return!(b>a||a>b)}var h=new Firebase("https://jinwdi.firebaseio.com/game_board");a.gameBoard=[],a.promise=e(h,a,"gameBoard"),a.gameId=f.id,a.symbol=f.mySymbol,a.turnMsg="test",a.clickMove="",a.test=0,a.turn=!1,a.promise.then(function(){a.gameBoard=[],console.log("game begin"),0==a.gameBoard.length&&"x"==a.symbol?(console.log("turnMsg First"),a.turnMsg="I am first move: Symbol: "+a.symbol,a.turn=!0):(a.turnMsg="I am Second Move: Symbol: "+a.symbol,a.turn=!1)}),h.on("value",function(b){console.log("wait received"),a.myTurn?console.log("it is my turn but I receive "):null!=b.val()?g(b.val(),a.gameBoard)?console.log("same gameboard"):(console.log("diff gameboard"),console.log("checking isLosing"),a.isLosing(b.val())?(alert("You Lost"),console.log("Lost"),a.is_restart=!1):a.isDraw()?alert("Draw"):(a.cells=b.val(),a.turn=!0)):console.log("snapshot is empty")}),a.makeMove=function(b){a.gameBoard[b-1]=a.symbol,a.changeSquareContent(b,a.symbol)},a.myClick=function(b){var c=parseInt(b.srcElement.attributes.index.value);b.srcElement.attributes.data.value,console.log("symbol:"+a.symbol),console.log("Winner:"+a.winner),a.turn&&(a.currentSquareClickedAlready(c+1)?alert("The square is already occupied. Please select another one"):(a.makeMove(c+1),a.isWinning()?(alert("You Won"),a.is_restart=!1):a.isDraw()?(alert("Draw"),a.is_restart=!1):a.turn=!1))},a.isLosing=function(b){return console.log("inLosing gameBoardData"+b),console.log("inLosing existWinner:"+a.existWinner(b)),a.existWinner(b)&&a.winner!=a.symbol?!0:!1},a.isWinning=function(){return a.existWinner(a.gameBoard)&&a.winner==a.symbol?!0:!1},a.isDraw=function(){return a.checkDraw()},a.numberOfWins=d.get("numberOfWins"),a.cells=[],a.winner="",a.name="Tickety",b.is_play_now_page=!0,b.is_how_to_page=!1,a.is_restart=!0,a.Diagonal=[[1,5,9],[3,5,7]],a.currentTurn="x",a.square,a.timeInMs=0,a.stop,a.timeInMs=0,a.seconds="00",a.minutes="00",a.currentSeconds=0,a.numberOfWins=function(){a.numberOfWins=parseInt(a.numberOfWins)+1,d.add("numberOfWins",a.numberOfWins)},a.hover=function(a){angular.element(a.srcElement).addClass("gray")},a.countUp=function(){a.currentSeconds++,a.minutes=a.formatZeroPadding(Math.floor(a.currentSeconds/60)),a.seconds=a.formatZeroPadding(a.currentSeconds%60),a.stop=c(a.countUp,1e3)},a.formatZeroPadding=function(a){return 10>a?"0"+a:a},a.starter=function(){console.log("start"),a.seconds=0,a.minutes=0,c(a.countUp,1e3)},a.stopper=function(){c.cancel(a.stop)},a.changeSquareContent=function(b,c){a.cells[b-1]=c},a.clearSquare=function(b){a.cells[b-1]=""},a.delayOpponentMove=function(){a.changeSquareContent(a.opponentSelectRandomSquare(),"o")},a.makeNextMove=function(b){"x"==a.currentTurn&&(a.changeSquareContent(b,"x"),a.existWinner(a.gameBoard)?(alert("Winner is "+a.winner),a.is_restart=!1,a.addNumberOfWins()):a.currentTurn="o",c(a.delayOpponentMove,1e3),a.existWinner(a.gameBoard)?(alert("Winner is "+a.winner),a.is_restart=!1,a.addNumberOfWins()):a.currentTurn="x")},a.handleClick=function(b){var c=parseInt(b.srcElement.attributes.index.value);b.srcElement.attributes.data.value,a.currentSquareClickedAlready(c+1)?alert("The square is already occupied. Please select another one"):a.makeNextMove(c+1)},a.currentSquareClickedAlready=function(b){return"o"===a.cells[b-1]||"x"===a.cells[b-1]?!0:!1},a.isTopHorizontalThreeOccupiedByMe=function(){var a=0;for(i=1;3>=i;i++){var b=document.getElementById("cell"+i).innerHTML;if("x"!=b)return!1;a++}return!0},a.checkDraw=function(){for(var b=0,c=1;9>=c;c++)("x"==a.cells[c-1]||"o"==a.cells[c-1])&&b++;return 9===b?!0:!1},a.existWinner=function(b){if(!b)return!1;var c=[[0,1,2],[3,4,5],[6,7,8],[0,3,6],[1,4,7],[2,5,8],[0,4,8],[2,4,6]];for(console.log("in existWinner BoardData:"+b),i=0;i<c.length;i++)if(a.three_equal(b[c[i][0]],b[c[i][1]],b[c[i][2]])&&b[c[i][0]])return console.log("winningCondition:"+c[i][0]+c[i][1]+c[i][2]),console.log(b[c[i][1]]),a.winner=b[c[i][0]],!0;return!1},a.three_equal=function(a,b,c){return a==b&&b==c},a.clearBoard=function(){for(i=1;9>=i;i++)a.cells[i-1]="",console.log(a.cells[i-1])},a.restartGame=function(){a.is_restart=!0,a.clearBoard()},a.opponentSelectRandomSquare=function(){var b=0;do b=Math.floor(9*Math.random()+1);while(a.currentSquareClickedAlready(b));return b};for(var i=0;9>i;i++)a.cells[i]=""}]),angular.module("ticketyApp").controller("HowToCtrl",["$scope","$rootScope",function(a,b){b.currentPage="main",a.wait="You wait for an opponent if there isn't already a waiting person.",a.join="If there is another person waiting, you join him or her to play the game.",a.win="Make three of a kind in a row, a column or a diagonal.",a.lose="If your opponent satisfies the winning condition first, you lose.",a.draw="If all the positions are occupied and there is no winner",b.is_how_to_page=!0,b.is_play_now_page=!1}]),angular.module("ticketyApp").controller("MatchPlayerCtrl",["$scope","angularFire","$location",function(a,b,c){function d(){return Math.floor(16777215*Math.random()).toString(16)}a.awesomeThings=["HTML5 Boilerplate","AngularJS","Karma"],a.waitingRoom={};var e=new Firebase("https://jinwdi.firebaseio.com/waiting_room");a.promise=b(e,a,"waitingRoom"),a.promise.then(function(){console.log("promise received"),1==a.waitingRoom.xJoined?(console.log("about to join the room"),a.joinWaitingRoom(),console.log("Joined the waitingRoom"+a.waitingRoom)):(console.log("about to create the room"),a.createWaitingRoom(),console.log("created the waitingRoom"+a.waitingRoom))}),a.createWaitingRoom=function(){a.waitingRoom={xJoined:!0,gameBoardNumber:d()},a.noticeMessage="You are x, waiting for opponent.",e.on("child_removed",function(){console.log("createWaitingRoom:"+a.waitingRoom.gameBoardNumber),c.path("game_board/"+a.waitingRoom.gameBoardNumber+"/x")})},a.joinWaitingRoom=function(){var b=a.waitingRoom.gameBoardNumber;console.log("joinWaitingRoom:"+a.waitingRoom.gameBoardNumber),a.waitingRoom={},c.path("game_board/"+b+"/o")}}]),angular.module("ticketyApp").directive("tickleMe",function(){return{restrict:"A",link:function(a,b){b.bind("mouseenter",function(){b.addClass("testClass")}),b.bind("mouseleave",function(){b.removeClass("testClass"),alert("Remove Black background color")}),b.bind("click",function(){alert("Don't tickle me ~")})}}});